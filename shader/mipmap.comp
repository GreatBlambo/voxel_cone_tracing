#version 450 core
layout (local_size_x = 2, local_size_y = 2, local_size_z = 2) in;

uniform sampler3D src_tex3D;
uniform layout (RGBA8) image3D dest_tex3D;

uniform int resolution;
uniform int mip;

const ivec3 voxel_offsets[] = ivec3[8]
(
  ivec3(1, 1, 1),
  ivec3(1, 1, 0),
  ivec3(1, 0, 1),
  ivec3(1, 0, 0),
  ivec3(0, 1, 1),
  ivec3(0, 1, 0),
  ivec3(0, 0, 1),
  ivec3(0, 0, 0)
);

vec4 average_block(ivec3 block_pos)
{
  vec4 res = vec4(0.0);
  
  for (int i = 0; i < 8; i++)
  {
    vec4 color = texelFetch(src_tex3D, block_pos + voxel_offsets[i], mip);
    res += (1 - res.a) * color;
  }

  return res;
}

void main()
{
  if (gl_GlobalInvocationID.x >= resolution ||
      gl_GlobalInvocationID.y >= resolution ||
      gl_GlobalInvocationID.z >= resolution)
    return;

  ivec3 write_pos = ivec3(gl_GlobalInvocationID);
  ivec3 block_pos = write_pos * 2;

  imageStore(dest_tex3D, write_pos, average_block(block_pos));
}
